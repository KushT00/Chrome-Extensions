{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Documents\\\\Extensions\\\\kanban-board\\\\src\\\\Column.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDrop } from 'react-dnd';\nimport Task from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Column = ({\n  columnId,\n  column,\n  moveTask\n}) => {\n  _s();\n  const [{\n    isOver\n  }, drop] = useDrop({\n    accept: 'TASK',\n    drop: item => {\n      moveTask(item.id, item.sourceColumnId, columnId);\n    },\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    className: \"column\",\n    style: {\n      backgroundColor: isOver ? 'lightgreen' : 'lightgrey'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: column.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), column.items.map(task => /*#__PURE__*/_jsxDEV(Task, {\n      task: task,\n      columnId: columnId\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Column, \"9166pYLrZ/JzF75YDim8ZjfICTM=\", false, function () {\n  return [useDrop];\n});\n_c = Column;\nexport default Column;\nvar _c;\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"names":["React","useDrop","Task","jsxDEV","_jsxDEV","Column","columnId","column","moveTask","_s","isOver","drop","accept","item","id","sourceColumnId","collect","monitor","ref","className","style","backgroundColor","children","name","fileName","_jsxFileName","lineNumber","columnNumber","items","map","task","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Documents/Extensions/kanban-board/src/Column.js"],"sourcesContent":["import React from 'react';\r\nimport { useDrop } from 'react-dnd';\r\nimport Task from './Task';\r\n\r\nconst Column = ({ columnId, column, moveTask }) => {\r\n  const [{ isOver }, drop] = useDrop({\r\n    accept: 'TASK',\r\n    drop: (item) => {\r\n      moveTask(item.id, item.sourceColumnId, columnId);\r\n    },\r\n    collect: (monitor) => ({\r\n      isOver: !!monitor.isOver(),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <div\r\n      ref={drop}\r\n      className=\"column\"\r\n      style={{ backgroundColor: isOver ? 'lightgreen' : 'lightgrey' }}\r\n    >\r\n      <h2>{column.name}</h2>\r\n      {column.items.map((task) => (\r\n        <Task key={task.id} task={task} columnId={columnId} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Column;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,WAAW;AACnC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,MAAM;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAAC;IAAEC;EAAO,CAAC,EAAEC,IAAI,CAAC,GAAGV,OAAO,CAAC;IACjCW,MAAM,EAAE,MAAM;IACdD,IAAI,EAAGE,IAAI,IAAK;MACdL,QAAQ,CAACK,IAAI,CAACC,EAAE,EAAED,IAAI,CAACE,cAAc,EAAET,QAAQ,CAAC;IAClD,CAAC;IACDU,OAAO,EAAGC,OAAO,KAAM;MACrBP,MAAM,EAAE,CAAC,CAACO,OAAO,CAACP,MAAM,CAAC;IAC3B,CAAC;EACH,CAAC,CAAC;EAEF,oBACEN,OAAA;IACEc,GAAG,EAAEP,IAAK;IACVQ,SAAS,EAAC,QAAQ;IAClBC,KAAK,EAAE;MAAEC,eAAe,EAAEX,MAAM,GAAG,YAAY,GAAG;IAAY,CAAE;IAAAY,QAAA,gBAEhElB,OAAA;MAAAkB,QAAA,EAAKf,MAAM,CAACgB;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACrBpB,MAAM,CAACqB,KAAK,CAACC,GAAG,CAAEC,IAAI,iBACrB1B,OAAA,CAACF,IAAI;MAAe4B,IAAI,EAAEA,IAAK;MAACxB,QAAQ,EAAEA;IAAS,GAAxCwB,IAAI,CAAChB,EAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmC,CACtD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAClB,EAAA,CAvBIJ,MAAM;EAAA,QACiBJ,OAAO;AAAA;AAAA8B,EAAA,GAD9B1B,MAAM;AAyBZ,eAAeA,MAAM;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
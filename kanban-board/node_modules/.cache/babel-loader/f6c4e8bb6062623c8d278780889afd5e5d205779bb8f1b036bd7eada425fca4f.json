{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Documents\\\\Extensions\\\\kanban-board\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport Column from './Column';\nimport AddColumnModal from './AddColumnModal';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [columns, setColumns] = useState({\n    'todo': {\n      name: 'To Do',\n      items: [{\n        id: '1',\n        content: 'Task 1'\n      }, {\n        id: '2',\n        content: 'Task 2'\n      }]\n    },\n    'ongoing': {\n      name: 'Ongoing',\n      items: []\n    },\n    'completed': {\n      name: 'Completed',\n      items: []\n    }\n  });\n  const [showModal, setShowModal] = useState(false);\n  const [newTaskText, setNewTaskText] = useState('');\n  const onDragEnd = result => {\n    if (!result.destination) return;\n    const {\n      source,\n      destination\n    } = result;\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    if (source.droppableId !== destination.droppableId) {\n      destItems.splice(destination.index, 0, removed);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: sourceItems\n        },\n        [destination.droppableId]: {\n          ...destColumn,\n          items: destItems\n        }\n      });\n    } else {\n      sourceItems.splice(destination.index, 0, removed);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: sourceItems\n        }\n      });\n    }\n  };\n  const addTask = columnId => {\n    if (newTaskText.trim() === '') return;\n    const newTask = {\n      id: `${new Date().getTime()}`,\n      // Unique task ID based on timestamp\n      content: newTaskText\n    };\n    setColumns({\n      ...columns,\n      [columnId]: {\n        ...columns[columnId],\n        items: [...columns[columnId].items, newTask]\n      }\n    });\n    setNewTaskText('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Kanban Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTaskText,\n      onChange: e => setNewTaskText(e.target.value),\n      placeholder: \"Enter new task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addTask('todo'),\n      children: \"Add to To Do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addTask('ongoing'),\n      children: \"Add to Ongoing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addTask('completed'),\n      children: \"Add to Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowModal(true),\n      children: \"Add Column\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kanban-board\",\n        children: Object.entries(columns).map(([columnId, column], index) => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: columnId,\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(Column, {\n            column: column,\n            columnId: columnId,\n            provided: provided,\n            snapshot: snapshot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)\n        }, columnId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(AddColumnModal, {\n      setShowModal: setShowModal,\n      addColumn: columnName => setColumns({\n        ...columns,\n        [columnName.toLowerCase().replace(/\\s+/g, '-')]: {\n          name: columnName,\n          items: []\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Hyr4MsLLRdPesPdn7jBKxn1SWM4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Column","AddColumnModal","jsxDEV","_jsxDEV","App","_s","columns","setColumns","name","items","id","content","showModal","setShowModal","newTaskText","setNewTaskText","onDragEnd","result","destination","source","sourceColumn","droppableId","destColumn","sourceItems","destItems","removed","splice","index","addTask","columnId","trim","newTask","Date","getTime","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","Object","entries","map","column","provided","snapshot","addColumn","columnName","toLowerCase","replace","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Documents/Extensions/kanban-board/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport Column from './Column';\nimport AddColumnModal from './AddColumnModal';\nimport './styles.css';\n\nfunction App() {\n  const [columns, setColumns] = useState({\n    'todo': {\n      name: 'To Do',\n      items: [{ id: '1', content: 'Task 1' }, { id: '2', content: 'Task 2' }]\n    },\n    'ongoing': {\n      name: 'Ongoing',\n      items: []\n    },\n    'completed': {\n      name: 'Completed',\n      items: []\n    }\n  });\n\n  const [showModal, setShowModal] = useState(false);\n  const [newTaskText, setNewTaskText] = useState('');\n\n  const onDragEnd = (result) => {\n    if (!result.destination) return;\n\n    const { source, destination } = result;\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n\n    if (source.droppableId !== destination.droppableId) {\n      destItems.splice(destination.index, 0, removed);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: sourceItems\n        },\n        [destination.droppableId]: {\n          ...destColumn,\n          items: destItems\n        }\n      });\n    } else {\n      sourceItems.splice(destination.index, 0, removed);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: sourceItems\n        }\n      });\n    }\n  };\n\n  const addTask = (columnId) => {\n    if (newTaskText.trim() === '') return;\n    \n    const newTask = {\n      id: `${new Date().getTime()}`, // Unique task ID based on timestamp\n      content: newTaskText\n    };\n\n    setColumns({\n      ...columns,\n      [columnId]: {\n        ...columns[columnId],\n        items: [...columns[columnId].items, newTask]\n      }\n    });\n\n    setNewTaskText('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Kanban Board</h1>\n      <input \n        type=\"text\" \n        value={newTaskText} \n        onChange={(e) => setNewTaskText(e.target.value)} \n        placeholder=\"Enter new task\" \n      />\n      <button onClick={() => addTask('todo')}>Add to To Do</button>\n      <button onClick={() => addTask('ongoing')}>Add to Ongoing</button>\n      <button onClick={() => addTask('completed')}>Add to Completed</button>\n      <button onClick={() => setShowModal(true)}>Add Column</button>\n\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div className=\"kanban-board\">\n          {Object.entries(columns).map(([columnId, column], index) => (\n            <Droppable droppableId={columnId} key={columnId}>\n              {(provided, snapshot) => (\n                <Column\n                  column={column}\n                  columnId={columnId}\n                  provided={provided}\n                  snapshot={snapshot}\n                />\n              )}\n            </Droppable>\n          ))}\n        </div>\n      </DragDropContext>\n      {showModal && (\n        <AddColumnModal\n          setShowModal={setShowModal}\n          addColumn={(columnName) => setColumns({\n            ...columns,\n            [columnName.toLowerCase().replace(/\\s+/g, '-')]: {\n              name: columnName,\n              items: []\n            }\n          })}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
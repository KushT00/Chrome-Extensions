{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Documents\\\\Extensions\\\\kanban-board\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport Column from './Column';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [columns, setColumns] = useState(() => {\n    const savedColumns = localStorage.getItem('columns');\n    return savedColumns ? JSON.parse(savedColumns) : {\n      todo: {\n        name: 'To Do',\n        items: [{\n          id: '1',\n          content: 'Task 1'\n        }, {\n          id: '2',\n          content: 'Task 2'\n        }]\n      },\n      ongoing: {\n        name: 'Ongoing',\n        items: []\n      },\n      completed: {\n        name: 'Completed',\n        items: []\n      }\n    };\n  });\n  useEffect(() => {\n    localStorage.setItem('columns', JSON.stringify(columns));\n  }, [columns]);\n  const moveTask = (taskId, sourceColumnId, destinationColumnId, destinationIndex) => {\n    const sourceColumn = columns[sourceColumnId];\n    const destColumn = columns[destinationColumnId];\n    const taskToMove = sourceColumn.items.find(item => item.id === taskId);\n    const updatedSourceItems = sourceColumn.items.filter(item => item.id !== taskId);\n    if (sourceColumnId === destinationColumnId) {\n      // Moving within the same column\n      const reorderedItems = [...updatedSourceItems];\n      reorderedItems.splice(destinationIndex, 0, taskToMove);\n      setColumns(prevColumns => ({\n        ...prevColumns,\n        [sourceColumnId]: {\n          ...sourceColumn,\n          items: reorderedItems\n        }\n      }));\n    } else {\n      // Moving to a different column\n      const updatedDestItems = [...destColumn.items, taskToMove];\n      setColumns(prevColumns => ({\n        ...prevColumns,\n        [sourceColumnId]: {\n          ...sourceColumn,\n          items: updatedSourceItems\n        },\n        [destinationColumnId]: {\n          ...destColumn,\n          items: updatedDestItems\n        }\n      }));\n    }\n  };\n  const addTask = columnId => {\n    const taskContent = prompt(\"Enter task content:\");\n    if (taskContent) {\n      const newTask = {\n        id: Date.now().toString(),\n        content: taskContent\n      };\n      setColumns(prevColumns => {\n        const updatedColumn = {\n          ...prevColumns[columnId],\n          items: [...prevColumns[columnId].items, newTask]\n        };\n        return {\n          ...prevColumns,\n          [columnId]: updatedColumn\n        };\n      });\n    }\n  };\n  const deleteColumn = columnId => {\n    setColumns(prevColumns => {\n      const newColumns = {\n        ...prevColumns\n      };\n      delete newColumns[columnId];\n      return newColumns;\n    });\n  };\n  const addColumn = () => {\n    const columnName = prompt(\"Enter new column name:\");\n    if (columnName) {\n      const newColumnId = `column_${Date.now()}`;\n      setColumns(prevColumns => ({\n        ...prevColumns,\n        [newColumnId]: {\n          name: columnName,\n          items: []\n        }\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Kanban Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addColumn,\n        children: \"Add Column\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kanban-board\",\n        children: Object.entries(columns).map(([columnId, column]) => /*#__PURE__*/_jsxDEV(Column, {\n          columnId: columnId,\n          column: column,\n          moveTask: moveTask,\n          addTask: addTask // Pass addTask to Column\n        }, columnId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RdNK9o+3lKrMG/siV7Xz42FB8pE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","DndProvider","HTML5Backend","Column","jsxDEV","_jsxDEV","App","_s","columns","setColumns","savedColumns","localStorage","getItem","JSON","parse","todo","name","items","id","content","ongoing","completed","setItem","stringify","moveTask","taskId","sourceColumnId","destinationColumnId","destinationIndex","sourceColumn","destColumn","taskToMove","find","item","updatedSourceItems","filter","reorderedItems","splice","prevColumns","updatedDestItems","addTask","columnId","taskContent","prompt","newTask","Date","now","toString","updatedColumn","deleteColumn","newColumns","addColumn","columnName","newColumnId","backend","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Object","entries","map","column","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Documents/Extensions/kanban-board/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport Column from './Column';\nimport './styles.css';\n\nfunction App() {\n  const [columns, setColumns] = useState(() => {\n    const savedColumns = localStorage.getItem('columns');\n    return savedColumns ? JSON.parse(savedColumns) : {\n      todo: {\n        name: 'To Do',\n        items: [{ id: '1', content: 'Task 1' }, { id: '2', content: 'Task 2' }],\n      },\n      ongoing: {\n        name: 'Ongoing',\n        items: [],\n      },\n      completed: {\n        name: 'Completed',\n        items: [],\n      },\n    };\n  });\n\n  useEffect(() => {\n    localStorage.setItem('columns', JSON.stringify(columns));\n  }, [columns]);\n\n  const moveTask = (taskId, sourceColumnId, destinationColumnId, destinationIndex) => {\n    const sourceColumn = columns[sourceColumnId];\n    const destColumn = columns[destinationColumnId];\n\n    const taskToMove = sourceColumn.items.find((item) => item.id === taskId);\n    const updatedSourceItems = sourceColumn.items.filter((item) => item.id !== taskId);\n    \n    if (sourceColumnId === destinationColumnId) {\n      // Moving within the same column\n      const reorderedItems = [...updatedSourceItems];\n      reorderedItems.splice(destinationIndex, 0, taskToMove);\n      setColumns((prevColumns) => ({\n        ...prevColumns,\n        [sourceColumnId]: {\n          ...sourceColumn,\n          items: reorderedItems,\n        },\n      }));\n    } else {\n      // Moving to a different column\n      const updatedDestItems = [...destColumn.items, taskToMove];\n      setColumns((prevColumns) => ({\n        ...prevColumns,\n        [sourceColumnId]: {\n          ...sourceColumn,\n          items: updatedSourceItems,\n        },\n        [destinationColumnId]: {\n          ...destColumn,\n          items: updatedDestItems,\n        },\n      }));\n    }\n  };\n\n  const addTask = (columnId) => {\n    const taskContent = prompt(\"Enter task content:\");\n    if (taskContent) {\n      const newTask = { id: Date.now().toString(), content: taskContent };\n      setColumns((prevColumns) => {\n        const updatedColumn = {\n          ...prevColumns[columnId],\n          items: [...prevColumns[columnId].items, newTask],\n        };\n        return { ...prevColumns, [columnId]: updatedColumn };\n      });\n    }\n  };\n\n  const deleteColumn = (columnId) => {\n    setColumns((prevColumns) => {\n      const newColumns = { ...prevColumns };\n      delete newColumns[columnId];\n      return newColumns;\n    });\n  };\n  \n  const addColumn = () => {\n    const columnName = prompt(\"Enter new column name:\");\n    if (columnName) {\n      const newColumnId = `column_${Date.now()}`;\n      setColumns((prevColumns) => ({\n        ...prevColumns,\n        [newColumnId]: { name: columnName, items: [] },\n      }));\n    }\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className=\"App\">\n        <h1>Kanban Board</h1>\n        <button onClick={addColumn}>Add Column</button>\n        <div className=\"kanban-board\">\n          {Object.entries(columns).map(([columnId, column]) => (\n            <Column\n              key={columnId}\n              columnId={columnId}\n              column={column}\n              moveTask={moveTask}\n              addTask={addTask} // Pass addTask to Column\n            />\n          ))}\n        </div>\n      </div>\n    </DndProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}